#include<bits/stdc++.h>
using namespace std;


class job
{
    public:
        int id;
        int dead;
        int profit;
};

bool comp(job j1, job j2)
{
    return j1.profit > j2.profit;
}

pair<int,int> jobSequence(job arr[], int n)
{
    sort(arr, arr+n, comp);
    
    int maxi = arr[0].dead;
    for(int i=1; i<n; i++)
    {
        maxi = max(maxi, arr[i].dead);
    }
    
    int slot[maxi+1];
    for(int i=0; i<=maxi; i++)
        slot[i] = -1;
        
    int count=0, profit=0;
    
    for(int i=0; i<n; i++)
    {
        for(int j=arr[i].dead; j>0; j--)
        {
            if(slot[j] == -1)
            {
                profit += arr[i].profit;
                slot[j] = arr[i].id;
                count++;
                break;
            }
        }
    }
    return make_pair(count, profit);
}


int main()
{
    int n;
    cin>>n;
    
    job arr[n];
    for(int i=0; i<n; i++){
        int id, dead, profit;
        cin>>id>>dead>>profit;
        
        arr[i].id = id;
        arr[i].dead = dead;
        arr[i].profit = profit;
    }
    
    cout<<jobSequence(arr, n).second;
    
    return 0;
}
